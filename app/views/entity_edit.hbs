<div id="code-hidden" style="display: none;">{{this.entity.code}}</div>

<div id="snippet-layout">
    <div id="snippet-header">
        <table style="width: 100%">
        <colgroup>
           <col span="1" style="width: 20%;">
           <col span="1" style="width: 70%;">
           <col span="1" style="width: 10%;">
        </colgroup>
        
        <tbody>
            <tr>
                <td>{{this.title}}</td>
                <td><span class="italic">// TODO</span></td>
                <td><a id="save" class="modern-button" href="#" style="padding: 6px 32px;">Сохранить</a></td>
            </tr>
        </tbody>
    </table>
    </div>
    <div id="editor"></div>
</div>

<script src="/lib/ace/ace.js" type="text/javascript" charset="utf-8"></script>
<script>
    var editor = ace.edit("editor");
    editor.setOptions({
        fontSize: "12pt",
        autoScrollEditorIntoView: true,
        copyWithEmptySelection: true,
    });
    editor.setTheme("ace/theme/monokai");
    editor.session.setMode("ace/mode/json");
    editor.getSession().setUseWorker(false);
    editor.focus();
    
    editor.session.setOptions({ 
        tabSize: 4, 
        useSoftTabs: true
    })

    editor.setValue(htmlDecode(document.getElementById('code-hidden').innerHTML));
    editor.gotoLine(0);

    function submitChanges() {
        const newCode = editor.getValue();
        // TODO возможно будем брать урлу из текущей строки браузера:
        fetch("/console/edit/", {
            method: 'PATCH',
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ code : newCode }),
            })
            .then(response => {
                response
                    .json()
                    .then(data => {
                        if (data.result) {
                            showToast(data.result, false);
                        } else {
                            showToast(data.error, true);
                        }
                        console.log(JSON.stringify(data));
                    })
                    .catch(err => {
                        showToast(err.message, true);
                        console.log(err);
                    });
            })
            .catch(err => {
                showToast(err.message, true);
                console.log(err);
            });
    }

    editor.commands.addCommand({
        name: 'save',
        bindKey: {win: "Ctrl-S", "mac": "Cmd-S"},
        exec: function (editor) {
            submitChanges();
        }
    });

    $('#save').click((e) => {
        submitChanges();
        e.preventDefault();
    })
</script>